name: Library Release Deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  GITHUB_USERNAME: "anything"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
  ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
  ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY_CONTENTS }}
  ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.SIGNING_KEY_ID }}
  ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }}

jobs:

  gradle-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Gradle Cache Setup
        uses: gradle/gradle-build-action@v2.4.2
      - name: Gradle Check
        run: ./gradlew check

  deploy:
    runs-on: ubuntu-latest
    needs:
      - gradle-check
    outputs:
      release_version: ${{ steps.output_version.outputs.release_version }}
    steps:
      - uses: actions/checkout@v3
      - name: Gradle Cache Setup
        uses: gradle/gradle-build-action@v2.4.2
      - name: Gradle Sync
        run: ./gradlew
      - name: Add Sdk Version to Env
        run: |
          release_version=$(./gradlew printVersion -q)
          echo "release_version=$release_version" >> $GITHUB_ENV
      - name: Publish ${{ env.release_version }}
        run: ./gradlew publishToMavenCentral
      - name: Add Sdk Version to Output
        id: output_version
        run: echo "release_version=${{ env.release_version }}" >> $GITHUB_OUTPUT

  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - deploy
    steps:
      - uses: actions/checkout@v3
      - uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.deploy.outputs.release_version }}
          name: Release ${{ needs.deploy.outputs.release_version }}
